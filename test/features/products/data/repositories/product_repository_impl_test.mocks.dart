// Mocks generated by Mockito 5.4.6 from annotations
// in labonne_sante/test/features/products/data/repositories/product_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:labonne_sante/core/db/app_database.dart' as _i8;
import 'package:labonne_sante/features/products/data/datasources/product_local_data_source.dart'
    as _i7;
import 'package:labonne_sante/features/products/data/datasources/product_remote_data_source.dart'
    as _i3;
import 'package:labonne_sante/features/products/data/models/banner_model.dart'
    as _i5;
import 'package:labonne_sante/features/products/data/models/category_model.dart'
    as _i6;
import 'package:labonne_sante/features/products/data/models/product_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductModel_0 extends _i1.SmartFake implements _i2.ProductModel {
  _FakeProductModel_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ProductRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRemoteDataSource extends _i1.Mock
    implements _i3.ProductRemoteDataSource {
  MockProductRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.ProductModel>> getProducts() =>
      (super.noSuchMethod(
            Invocation.method(#getProducts, []),
            returnValue: _i4.Future<List<_i2.ProductModel>>.value(
              <_i2.ProductModel>[],
            ),
          )
          as _i4.Future<List<_i2.ProductModel>>);

  @override
  _i4.Future<_i2.ProductModel> getProductById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getProductById, [id]),
            returnValue: _i4.Future<_i2.ProductModel>.value(
              _FakeProductModel_0(
                this,
                Invocation.method(#getProductById, [id]),
              ),
            ),
          )
          as _i4.Future<_i2.ProductModel>);

  @override
  _i4.Future<List<_i5.BannerModel>> getBanners() =>
      (super.noSuchMethod(
            Invocation.method(#getBanners, []),
            returnValue: _i4.Future<List<_i5.BannerModel>>.value(
              <_i5.BannerModel>[],
            ),
          )
          as _i4.Future<List<_i5.BannerModel>>);

  @override
  _i4.Future<List<_i6.CategoryModel>> getCategories() =>
      (super.noSuchMethod(
            Invocation.method(#getCategories, []),
            returnValue: _i4.Future<List<_i6.CategoryModel>>.value(
              <_i6.CategoryModel>[],
            ),
          )
          as _i4.Future<List<_i6.CategoryModel>>);
}

/// A class which mocks [ProductLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductLocalDataSource extends _i1.Mock
    implements _i7.ProductLocalDataSource {
  MockProductLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> cacheProducts({required List<_i8.Product>? products}) =>
      (super.noSuchMethod(
            Invocation.method(#cacheProducts, [], {#products: products}),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i8.Product>> getProducts({
    Duration? maxAge = const Duration(hours: 1),
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getProducts, [], {#maxAge: maxAge}),
            returnValue: _i4.Future<List<_i8.Product>>.value(<_i8.Product>[]),
          )
          as _i4.Future<List<_i8.Product>>);
}
